{"version":3,"sources":["components/tempConverter.js","components/dateFormat.js","components/Hourly.js","components/Daily.js","components/Result.js","components/Main.js","components/Home.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["tempConverter","measurementFrom","String","measurementTo","temperature","Number","measurements","includes","toFixed","dateFormat","result","output","input","timezone_offset","outputFormat","monthList","weekdayList","now","Date","inputDate","getTime","getTimezoneOffset","date","getDate","month","getMonth","year","getFullYear","weekday","getDay","hoursWZ","getHours","hours","minutes","getMinutes","seconds","getSeconds","hoursAPM","APM","HourlyItem","props","className","time","icon","temp","Hourly","displayHourlyItem","hourly","hourlyItem","state","data","forEach","item","i","push","dt","weather","main","setState","myRef","React","createRef","this","id","Component","DailyItem","low","high","Daily","displayItems","daily","dailyItems","min","max","DetailsItem","label","Details","feels_like","wind_speed","humidity","pressure","today","sunrise","sunset","Summary","dayNight","description","Result","current","Main","city","backgroundTime","weatherEffect","drops","randRange","Math","floor","random","rainDropStyle","divStyle","left","window","innerWidth","top","innerHeight","style","createRain","x","y","duration","size","width","height","animationDuration","stars","backgroundClassName","onClick","displayPage","cityname","collectData","HomeResultError","message","type","HomeResult","city_coord","latitude","longitude","city_name","city_country","HomeResultContainer","HomeResultLoading","HomeSelectSearchCity","onSubmit","event","showResult","data-method","name","autoComplete","placeholder","HomeSelect","handleSearchByCurrentLocation","openCloseSearchField","HomeLogo","Home","isOpen","searchField","document","querySelector","value","preventDefault","target","dataset","method","getCity","searchMethod","getGeoData","navigator","geolocation","getCurrentPosition","getGeoDataSuccess","getGeoDataError","pos","coords","err","console","log","displayResult","setCity","url","fetch","then","response","status","json","res","error","error_message","resultCon","catch","paginator","results","bind","open","Loading","App","getCookie","cookieValue","cookie","cookies","split","length","trim","substring","decodeURIComponent","page","geodata","isLoading","lat","lon","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c463eb0f.chunk.js","sourcesContent":["function tempConverter(measurementFrom=String, measurementTo=String, temperature=Number) {\n\n    // Measurements\n    let measurements = [\"celcius\", \"fahreneheit\", \"kelvin\"];\n\n    // Temperature must be of number type\n    if (typeof temperature !== \"number\") return false;\n\n    // Measurement must be Celcius, Fahrenheit or Kelvin\n    if (!measurements.includes(measurementFrom) || !measurements.includes(measurementTo)) return false;\n\n    // MeasurementFrom and MeasurementTo must be different\n    if (measurementFrom === measurementTo) return temperature;\n\n    // Declare return value \"temperature\"\n    let result\n\n    // Convert Functions\n    if (measurementFrom === \"celcius\") {\n        // Convert Celcius to other measurements\n        if(measurementTo === \"fahrenheit\") {\n            // Celcius to Fahrenheit\n            result = ((temperature * 1.8) + 32);\n        } else {\n            // Celcius to Kelvin\n            result = (temperature + 273.15);\n        }\n    } else if (measurementFrom === \"fahrenheit\") {\n        // Convert Fahrenheit to other measurements\n        if(measurementTo === \"celcius\") {\n            // Fahrenheit to Celcius\n            result = ((temperature - 32) / 1.8);\n        } else {\n            // Celcius to Kelvin\n            result = (((temperature - 32) / 1.8) + 273.15);\n        }\n    } else {\n        // Convert Kelvin to other measurements\n        if(measurementTo === \"celcius\") {\n            // Kelvin to Celcius\n            result = (temperature - 273.15);\n        } else {\n            // Kelvin to Fahrenheit\n            result = (((temperature - 273.15) * 1.8) + 32);\n        };\n    };\n\n    return result.toFixed(0);;\n};\n\nexport default tempConverter;","function dateFormat(output=String, input=Number, timezone_offset=Number) {\n\n    // Output Formats\n    let outputFormat = [\n        \"full_date\", // 21 September 2020\n        \"month_year\", // September 2020\n        \"weekday\", // Sunday\n        \"HH\", // 18\n        \"HHMM\", //1820\n        \"HHMMSS\", // 182055 \n        \"HH:MM\", // 18:20\n        \"HH:MM:SS\", // 18:20:55\n        \"H:MM_APM\", // 6:20pm\n        \"H:MM:SS_APM\", // 6:20:55pm\n        \"H_APM\", // 6pm\n    ];\n\n    // Month\n    let monthList = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n    ];\n\n    // Weekday\n    let weekdayList = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n    ];\n\n    // Retrieve values\n    let now = new Date(input * 1000);\n    let inputDate = timezone_offset ? new Date(now.getTime() + now.getTimezoneOffset() * 60000 + (timezone_offset * 1000)) : now;\n    let date = inputDate.getDate();\n    let month = monthList[inputDate.getMonth() + 1];\n    let year = inputDate.getFullYear();\n    let weekday = weekdayList[inputDate.getDay()];\n    let hoursWZ = inputDate.getHours() < 10 ? \"0\" + inputDate.getHours(): inputDate.getHours();\n    let hours = inputDate.getHours();\n    let minutes = inputDate.getMinutes() < 10 ? \"0\" + inputDate.getMinutes() : inputDate.getMinutes();\n    let seconds = inputDate.getSeconds();\n    let hoursAPM = hours < 12 ? hours : hours - 12;\n    let APM = hours < 12 ? \"am\" : \"pm\";\n\n    // if output is not on the list, return false\n    if (!outputFormat.includes(output)) return false;\n\n    // Declare result\n    let result;\n\n    switch(output) {\n        case \"full_date\": // 21 September 2020\n            result = `${date} ${month} ${year}`;\n            break;\n        case \"month_year\": // September 2020\n            result = `${month} ${year}`;\n            break;\n        case \"weekday\": // Sunday\n            result = `${weekday}`;\n            break;\n        case \"HH\": // 18\n            result = `${hours}`;\n            break;\n        case \"HHMM\": // 18\n            result = `${hours}${minutes}`;\n            break;   \n        case \"HHMMSS\": //182055\n            result = `${hours}${minutes}${seconds}`;\n            break;\n        case \"HH:MM\": // 18:20\n            result = `${hoursWZ}:${minutes}`;\n            break;\n        case \"HH:MM:SS\": // 18:20:55\n            result = `${hoursWZ}:${minutes}:${seconds}`;\n            break;\n        case \"H:MM_APM\": // 6:20pm\n            result = `${hoursAPM}:${minutes}${APM}`;\n            break;\n        case \"H:MM:SS_APM\": // 6:20:55pm\n            result = `${hoursAPM}:${minutes}:${seconds}${APM}`;\n            break;\n        case \"H_APM\": // 6pm\n            result = `${hoursAPM}${APM}`;\n            break;\n        default:\n            break;\n    }\n    return result;\n};\n\nexport default dateFormat;","import React from 'react';\nimport tempConverter from './tempConverter';\nimport dateFormat from './dateFormat';\n\nfunction HourlyItem(props) {\n    return(\n        <div className=\"hourlyItem\">\n            <p className=\"hourlyItemTime\">\n                {props.time}\n            </p>\n            <i className={`hourlyItemIcon ${props.icon}`}></i>\n            <p className=\"hourlyItemTemp\">{props.temp}<span>°</span></p>\n        </div>\n    )\n}\n\nclass Hourly extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                {time: \"Now\", temp: 23},\n                {time: \"1pm\", temp: 33},\n                {time: \"2pm\", temp: 30},\n                {time: \"3pm\", temp: 23},\n                {time: \"4pm\", temp: 20},\n                {time: \"5pm\", temp: 16},\n                {time: \"6pm\", temp: 33},\n                {time: \"7pm\", temp: 30},\n                {time: \"8pm\", temp: 23},\n                {time: \"9pm\", temp: 20},\n                {time: \"10pm\", temp: 16},\n                {time: \"11pm\", temp: 33},\n                {time: \"12am\", temp: 30},\n                {time: \"1am\", temp: 23},\n                {time: \"2am\", temp: 20},\n                {time: \"3am\", temp: 16},\n                {time: \"4am\", temp: 33},\n                {time: \"5am\", temp: 30},\n                {time: \"6am\", temp: 23},\n                {time: \"7am\", temp: 20},\n                {time: \"8am\", temp: 16},\n            ],\n            hourlyItem: '',\n        };\n        this.myRef = React.createRef();\n    };\n\n    componentDidMount() {\n        this.displayHourlyItem(this.props.hourly);\n    };\n\n    displayHourlyItem = (hourly) => {\n        let hourlyItem = [];\n        let icon = {\n            \"Clear\": \"fas fa-sun\",\n            \"Clouds\": \"fas fa-cloud\",\n            \"Rain\": \"fas fa-cloud-showers-heavy\",\n        };\n\n        if (!hourly) {\n            this.state.data.forEach((item, i) => {\n                let time = i === 0 ? \"Now\" : item.time;\n\n                hourlyItem.push(\n                    <HourlyItem\n                        key={`hourlyitem-${i}`}\n                        time={time}\n                        icon=\"fas fa-cloud-showers-heavy\"\n                        temp={item.temp}\n                    />\n                );\n            });\n        };\n\n        hourly.forEach((item, i) => {\n            let time = i === 0 ? \"Now\" : dateFormat(\"H_APM\", item.dt, this.props.timezone_offset);\n\n            hourlyItem.push(\n                <HourlyItem\n                    key={`hourlyItem-${i}`}\n                    time={time}\n                    icon={icon[item.weather[0].main]}\n                    temp={tempConverter(\"kelvin\", \"celcius\", item.temp)}\n                />\n            )\n        });\n\n        this.setState({\n            hourlyItem: hourlyItem,\n        })\n        return;\n    };\n\n    render() {\n        return(\n            <div id=\"hourly\" className=\"hourly\">\n                {this.state.hourlyItem}\n            </div>\n        );\n    };\n};\n\nexport default Hourly;","import React from 'react';\nimport tempConverter from './tempConverter';\nimport dateFormat from './dateFormat';\n\nfunction DailyItem(props) {\n    return(\n        <div className=\"dailyItem\">\n            <p className=\"dailyItemWeekday\">{props.weekday}</p>\n            <i className={`dailyItemIcon ${props.icon}`}></i>\n            <div className=\"dailyItemHighLow\">\n                <p className=\"dailyItemLow\">{props.low}<span>°</span></p>\n                <p className=\"dailyItemHigh\">{props.high}<span>°</span></p>\n            </div>\n        </div>\n    )\n}\n\nclass Daily extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                \n            ],\n            weekday: [\n                \"Sunday\",\n                \"Monday\",\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Thursday\",\n                \"Friday\",\n                \"Saturday\",\n            ],\n            dailyItems: '',\n        };\n    };\n\n    componentDidMount() {\n        this.displayItems(this.props.daily);\n    };\n\n    displayItems = (daily) => {\n        let icon = {\n            \"Clear\": \"fas fa-sun\",\n            \"Clouds\": \"fas fa-cloud\",\n            \"Rain\": \"fas fa-cloud-showers-heavy\",\n        };\n        let dailyItems = [];\n        if (!daily) {\n            for (let i = 0; i < 7; i++) {\n                dailyItems.push(\n                    <DailyItem\n                        key={`dailyitem-${i}`}\n                        weekday={this.state.weekday[i]}\n                        icon=\"fas fa-cloud-showers-heavy\"\n                    />\n                );\n            };\n        };\n\n        daily.forEach((item, i) => {\n            if (i > 0){\n                dailyItems.push(\n                    <DailyItem\n                        key={`dailyitem-${i}`}\n                        weekday={dateFormat(\"weekday\", item.dt, this.props.timezone_offset)}\n                        icon={icon[item.weather[0].main]}\n                        low={tempConverter(\"kelvin\", \"celcius\", item.temp.min)}\n                        high={tempConverter(\"kelvin\", \"celcius\", item.temp.max)}\n                    />\n                )\n            }\n        });\n\n\n        this.setState({\n            dailyItems: dailyItems,\n        })\n    };\n\n\n    render() {\n        return(\n            <div id=\"daily\" className=\"daily\">\n                {this.state.dailyItems}\n            </div>\n        );\n    };\n};\n\nexport default Daily;","import React from 'react';\nimport Hourly from './Hourly';\nimport Daily from './Daily';\nimport tempConverter from './tempConverter';\nimport dateFormat from './dateFormat';\n\nfunction DetailsItem(props) {\n  return(\n    <div className=\"detailsItem\">\n      <i className={`detailsItemIcon ${props.icon}`}></i>\n      <p className=\"detailsItemLabel\">{props.label}</p>\n      <p className=\"detailsItemData\">{props.data}</p>\n    </div>\n  )\n}\n\nfunction Details(props) {\n  return(\n    <div id=\"details\" className=\"details\">\n      <DetailsItem\n        key=\"feelslike\"\n        icon=\"fas fa-thermometer-half\"\n        label=\"Feels like\"\n        data={`${tempConverter(\"kelvin\", \"celcius\", props.item.feels_like)}°`}\n      />\n      <DetailsItem\n        key=\"wind\"\n        icon=\"fas fa-wind\"\n        label=\"Wind\"\n        data={props.item.wind_speed}\n      />\n      <DetailsItem\n        key=\"humidity\"\n        icon=\"fas fa-tint\"\n        label=\"Humidity\"\n        data={`${props.item.humidity}%`}\n      />\n      <DetailsItem\n        key=\"pressure\"\n        icon=\"fas fa-tachometer-alt\"\n        label=\"Pressure\"\n        data={props.item.pressure}\n      />\n      <DetailsItem\n        key=\"sunrise\"\n        icon=\"far fa-sun\"\n        label=\"Sunrise\"\n        data={dateFormat(\"HH:MM\", props.today.sunrise, props.timezone_offset)}\n      />\n      <DetailsItem\n        key=\"sunset\"\n        icon=\"far fa-moon\"\n        label=\"Sunset\"\n        data={dateFormat(\"HH:MM\", props.today.sunset, props.timezone_offset)}\n      />\n    </div>\n  )\n}\n\nfunction Summary(props) {\n  let icon = {\n    \"day\": {\n      \"Atmosphere\": \"fas fa-smog\",\n      \"Clear\": \"fas fa-sun\",\n      \"Clouds\": \"fas fa-cloud\",\n      \"Drizzle\": \"fas fa-cloud-showers-heavy\",\n      \"Rain\": \"fas fa-cloud-showers-heavy\",\n      \"Snow\": \"fas fa-snowflake\",\n      \"Thunderstorm\": \"fas fa-bolt\",\n    },\n    \"night\": {\n      \"Atmosphere\": \"fas fa-smog\",\n      \"Clear\": \"fas fa-moon\",\n      \"Clouds\": \"fas fa-cloud-moon\",\n      \"Drizzle\": \"fas fa-cloud-showers-heavy\",\n      \"Rain\": \"fas fa-cloud-showers-heavy\",\n      \"Snow\": \"fas fa-snowflake\",\n      \"Thunderstorm\": \"fas fa-bolt\",\n    }\n  }\n\n  return(\n    <div id=\"summary\" className=\"summary\">\n      <div id=\"summaryIcon\" className=\"summaryIcon\">\n        <i className={`summaryIconIcon ${icon[props.dayNight][props.item.weather[0].main]}`}></i>\n        <p className=\"summaryIconDescription\">{props.item.weather[0].description}</p>\n      </div>\n      <div id=\"summaryTemp\" className=\"summaryTemp\">\n        <p className=\"summaryCurrentTemp\">{tempConverter(\"kelvin\", \"celcius\", props.item.temp)}<span>°</span></p>\n      </div>\n      <div id=\"summaryHighLow\" className=\"summaryHighLow\">\n        <div id=\"summaryHigh\" className=\"summaryHighLowItem\">\n          <i className=\"fas fa-long-arrow-alt-up\"></i>\n          <p className=\"summaryHighLowTemp\">{tempConverter(\"kelvin\", \"celcius\", props.today.temp.max)}<span>°</span></p>\n        </div>\n        <div id=\"summaryLow\" className=\"summaryHighLowItem\">\n          <i className=\"fas fa-long-arrow-alt-down\"></i>\n          <p className=\"summaryHighLowTemp\">{tempConverter(\"kelvin\", \"celcius\", props.today.temp.min)}<span>°</span></p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Result(props) {\n    return(\n        <div id=\"result\" className=\"result\">\n          <Summary\n            key=\"summary\"\n            item={props.result.current}\n            today={props.result.daily[0]}\n            dayNight={props.dayNight}\n          />\n          <Details\n            key=\"details\"\n            item={props.result.current}\n            today={props.result.daily[0]}\n            timezone_offset={props.timezone_offset}\n          />\n          <Hourly\n            key=\"hourly\"\n            hourly={props.result.hourly}\n            timezone_offset={props.timezone_offset}\n          />\n          <Daily\n            key=\"daily\"\n            daily={props.result.daily}\n            timezone_offset={props.timezone_offset}\n          />\n        </div>\n    )\n}\n\nexport default Result;","import React from 'react';\nimport Result from './Result';\nimport dateFormat from './dateFormat';\n\nfunction Main(props) {\n    let cityname = props.city ? true : false;\n    let dayNight;\n\n    if ((props.result.current.dt < props.result.current.sunrise) || (props.result.current.dt > props.result.current.sunset)) {\n        dayNight = \"night\";\n    } else {\n        dayNight = \"day\";\n    }\n\n    let backgroundTime = {\n        time: dayNight,\n        condition: props.result.current.weather[0].main,\n    }\n    let backgroundTheme = {\n        \"day\": {\n            \"Clear\": \"background-clear-sunny\",\n            \"Clouds\": \"background-cloud\",\n            \"Rain\": \"background-rain\",\n            \"Thunderstorm\": \"background-rain\",\n        },\n        \"night\": {\n            \"Clear\": \"background-clear-night\",\n            \"Clouds\": \"background-cloud-night\",\n            \"Rain\": \"background-rain-night\",\n            \"Thunderstorm\": \"background-rain-night\",\n        },\n    };\n    // Weather Background Effect\n    let weatherEffect = [];\n\n    // Rain effect\n    let rainEffect = [\n        \"Rain\",\n        \"Thunderstorm\",\n    ];\n\n    let drops = props.result.current.weather[0].description === \"light rain\" ? 300 : 900;\n\n    let randRange = (min, max) => {\n        return (Math.floor(Math.random() * (max - min + 1) + min));\n    }\n\n    let createRain = () => {\n        for (let i = 0; i < drops; i++) {\n            let rainDropStyle = dayNight === \"day\" ? \"background-rain-drop\" : \"background-rain-drop-night\";\n            const divStyle = {\n                left: randRange(0, window.innerWidth),\n                top: randRange(-1000, window.innerHeight),\n            }\n            weatherEffect.push(\n                <div key={`drop-${i}`} id={`drop-${i}`} className={rainDropStyle} style={divStyle}></div>\n            )\n        }\n        \n    };\n\n    if (rainEffect.includes(props.result.current.weather[0].main)) (createRain());\n\n\n    // Starry Night\n    let stars = () => {\n        let count = 250;\n        for (let i = 0; i < count; i++) {\n            let x = Math.floor(Math.random() * window.innerWidth);\n            let y = Math.floor(Math.random() * window.innerHeight);\n            let duration = Math.random() * 10;\n            let size = Math.random() * 1;\n            let divStyle = {\n                left: x,\n                top: y,\n                width: 1 + size,\n                height: 1 + size,\n                animationDuration: `${duration}s`,\n            };\n            weatherEffect.push(\n                <div key={`star-${i}`} id={`star-${i}`} className=\"background-night-star\" style={divStyle}></div>\n            )\n        }\n    }\n\n    if ((dayNight === \"night\") && (props.result.current.weather[0].main === \"Clear\")) (stars());\n\n    // ClassName\n    //let backgroundClassName = '';\n    let backgroundClassName = backgroundTheme[backgroundTime.time][backgroundTime.condition];\n\n    return(\n        <div id=\"main\" className=\"main\">\n            <div id=\"background\" className={`background ${backgroundClassName}`}>{weatherEffect}</div>\n            <div id=\"mainNav\" className=\"mainNav\">\n                <div id=\"mainBtnHome\" className=\"mainBtnHome\" onClick={() => {props.displayPage(\"home\")}}>\n                    <i className=\"fas fa-undo-alt\"></i>\n                </div>\n                <div id=\"mainLocation\" className=\"mainLocation\">\n                    <h1>{props.cityname}</h1>\n                </div>\n            </div>\n            <Result\n                key=\"result\"\n                result={props.result}\n                dayNight={dayNight}\n                timezone_offset={props.timezone_offset}\n                collectData={props.collectData}\n            />\n        </div>\n    );\n};\n\nexport default Main;","import React, { Fragment } from 'react';\nimport Expand from 'react-expand-animated';\n\nfunction HomeResultError(props) {\n    let message;\n    \n    switch(props.type) {\n        case \"noResult\":\n            message = \"Opps. No result.\";\n            break;\n        case \"tooMany\":\n            message = \"Opps. There are too many results, please be more specific!\";\n            break;\n        case \"emptyEntry\":\n            message = \"Opps. You must search something!\"\n            break;\n        default:\n            message = \"Opps!\"\n            break;\n    }\n\n    return(\n        <div id=\"homeResultError\" className=\"homeResultError\">\n            <div id=\"homeResultErrorCon\" className=\"homeResultErrorCon\">\n                <p>{message}</p>\n            </div>\n        </div>\n    )\n}\n\nfunction HomeResult(props) {\n\n    return(\n        <div className=\"cityResult\" onClick={() => props.collectData(`${props.item.city_coord.latitude}`, `${props.item.city_coord.longitude}`, `${props.item.city_name}`)}>\n            <div className=\"cityResultInfo\">\n                <h1 className=\"cityResultInfoH1\">{props.item.city_name}, <span className=\"cityResultCountry\">{props.item.city_country}</span></h1>\n                <div className=\"cityResultCoord\">\n                    <p className=\"cityResultLat\">latitude: {props.item.city_coord.latitude}</p>\n                    <p className=\"cityResultLon\">longitude: {props.item.city_coord.longitude}</p>\n                </div>\n            </div>\n            <div className=\"cityResultInspect\">\n                <i className=\"fas fa-chevron-right\"></i>\n            </div>\n            \n        </div>\n    )\n}\n\nfunction HomeResultContainer(props) {\n    return(\n        <div id=\"homeResultContainer\" className=\"homeResultContainer\">\n            {props.result}\n        </div>\n    )\n}\n\nfunction HomeResultLoading(props) {\n    return(\n        <div id=\"homeResultLoading\" className=\"homeResultLoading\">\n            <i className=\"fas fa-spinner\"></i>\n        </div>\n    )\n}\n\nclass HomeSelectSearchCity extends React.Component {\n    render() {\n        return(\n            <div id=\"homeSelectSearchCity\" className=\"homeSelectSearchCity\">\n                <form id=\"homeSelectSearchCityForm\" className=\"homeSelectSearchCityForm\" onSubmit={(event) => this.props.showResult(event)}>\n                    <div className=\"searchCityField\" data-method=\"cityname\">\n                        <input id=\"searchCityInput\" type=\"text\" name=\"cityname\" autoComplete=\"off\" placeholder=\"enter city name\"/>\n                        <button type=\"submit\"><i className=\"fas fa-search\"></i></button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction HomeSelect(props) {\n    return(\n        <div id=\"homeSelect\" className=\"homeSelect\">\n            <ul id=\"homeSelectMethod\" className=\"homeSelectMethod\">\n                <li \n                    className=\"homeSelectMethodOption\"\n                    onClick={() => props.handleSearchByCurrentLocation()}\n                >\n                    Current Location\n                </li>\n                <li \n                    className=\"homeSelectMethodOption\"\n                    onClick={() => props.openCloseSearchField()}\n                >\n                    Search City\n                </li>\n            </ul>\n        </div>      \n    );\n};\n\nfunction HomeLogo() {\n    return(\n        <div id=\"homeLogo\" className=\"homeLogo\">\n            <h1 className=\"homeLogoH1\">G2Weather</h1>\n        </div>\n    );\n};\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props); {\n            this.state = {\n              isOpen: {\n                  searchField: false,\n                  result: false,\n              },\n              result: <HomeResultLoading\n                            key=\"homeselectsearchcity\"\n                        />,\n              paginator: {\n                  current: 0,\n                  results: '',\n              }\n            };\n        };\n        this.handleSearchByCurrentLocation = this.handleSearchByCurrentLocation.bind(this);\n        this.openCloseSearchField = this.openCloseSearchField.bind(this);\n        this.showResult = this.showResult.bind(this);\n    };\n\n    openCloseSearchField = () => {\n        this.setState({\n            isOpen: {\n                searchField: !this.state.isOpen.searchField,\n                //searchField: true,\n            },\n        });\n        document.querySelector(\"#searchCityInput\").value = '';\n    };\n\n    showResult = (event) => {\n        event.preventDefault();\n        this.setState({\n            isOpen: {\n                result: !this.state.isOpen.result,\n                //result: true,\n            },\n            result: <HomeResultLoading\n                        key=\"homeselectsearchcity\"\n                    />,\n        });\n        if (event.target.dataset.method === \"geocoords\") {\n\n        } else {\n            this.getCity(\"cityname\", event.target.cityname.value);\n            event.target.cityname.value = '';   \n        }\n    };\n\n    handleSearchByCurrentLocation = () => {\n        this.props.searchMethod(\"currentLocation\");\n        this.getGeoData();\n        this.setState({\n            isOpen: {\n                result: !this.state.isOpen.result,\n            }\n        })\n    }\n\n    getGeoData = () => {\n        navigator.geolocation.getCurrentPosition(this.getGeoDataSuccess, this.getGeoDataError);\n    }\n\n    // Function to return value if successfully obtain geodata\n    getGeoDataSuccess = (pos) => {\n        this.getCity(\"geocoords\", [pos.coords.latitude, pos.coords.longitude])\n    };\n\n    // Function to print an error message if unsuccessfull\n    getGeoDataError = (err) => {\n        console.log(`Error: ${err}`);\n    }\n\n    // Display Result\n    displayResult = (data) => {\n        let result = [];\n        data.forEach((item, i) => {\n            result.push(\n                <HomeResult\n                    key={`homeresult-${i}`}\n                    item={item}\n                    collectData={this.props.collectData}\n                    setCity={this.props.setCity}\n                />\n            )\n        })\n        return result;\n    }\n\n    // Function to search for locations\n    getCity = (method, value) => {\n        let latitude;\n        let longitude;\n        let body;\n        let cityname;\n        let url;\n\n        // If method === Geolocation\n        if (method === \"geocoords\") {\n            latitude = value[0].toFixed(1);\n            longitude = value[1].toFixed(1);\n            url = `https://gut2weather.herokuapp.com/api/get_cityname_geo/${latitude}/${longitude}`;\n        } else {\n            cityname = value;\n            url = `https://gut2weather.herokuapp.com/api/get_cityname_get/${cityname}`;\n        }\n\n        // Fetch API\n        fetch(url)\n            .then(response => response.status === 404\n                                ? this.setState({\n                                    result: <HomeResultError key=\"homeresulterror\" type=\"emptyEntry\"/>\n                                })\n                                : response.json())\n            .then(res => {\n                let result = res.error\n                                ? res.error_message\n                                    ? <HomeResultError key=\"homeresulterror\" type=\"tooMany\"/>\n                                    : <HomeResultError key=\"homeresulterror\" type=\"noResult\"/>\n                                : this.displayResult(res);\n                let resultCon = <HomeResultContainer\n                                    key=\"homeresultcontainer\"\n                                    result={result}\n                                />\n                this.setState({\n                    result: resultCon,\n                });\n            })\n            .catch(error => {\n                console.log(error)\n            });\n    };\n\n    render() {\n        return(\n            <div id=\"home\" className=\"home\">\n                <HomeLogo\n                    key=\"homelogo\"\n                />\n                <HomeSelect\n                    key=\"homeSelect\"\n                    searchMethod={this.props.searchMethod}\n                    handleSearchByCurrentLocation={this.handleSearchByCurrentLocation}\n                    openCloseSearchField={this.openCloseSearchField}\n                />\n                <Fragment>\n                    <Expand open={this.state.isOpen.searchField}>\n                        <HomeSelectSearchCity\n                            key=\"homeselectsearchcity\"\n                            showResult={this.showResult}\n                        />\n                    </Expand>\n                </Fragment>\n                <Fragment>\n                    <Expand open={this.state.isOpen.result}>\n                        {this.state.result}\n                    </Expand>\n                </Fragment>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\n\nfunction Loading(props) {\n    return(\n        <h1>LOADING...</h1>\n    );\n};\n\nexport default Loading;","import React from 'react';\nimport Main from './components/Main';\nimport Home from './components/Home';\nimport Loading from './components/Loading';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      geodata: {\n        latitude: '',\n        longitude: '',\n        isLoading: true,\n      },\n      result: '',\n      isLoading: true,\n      displayPage: '',\n      cityname: '',\n    };\n    this.displayPage = this.displayPage.bind(this);\n    this.searchMethod = this.searchMethod.bind(this);\n    this.getCity = this.getCity.bind(this);\n    this.collectData = this.collectData.bind(this);\n    this.setCity = this.setCity.bind(this);\n  };\n\n  componentDidMount() {\n    this.displayPage(\"home\");\n  };\n\n  // Function to get CSRF token\n  getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n  }\n\n  // Function to change page\n  displayPage = (page) => {\n    let displayPage;\n    switch (page) {\n      case \"home\":\n        displayPage = <Home\n                        key=\"home\"\n                        searchMethod={this.searchMethod}\n                        getCity={this.getCity}\n                        setCity={this.setCity}\n                        collectData={this.collectData}\n                        result={this.state.result}\n                        geodata={this.state.geodata}\n                      />\n        break;\n      case \"loading\":\n        displayPage = <Loading\n                        key=\"loading\"\n                      />\n        break;\n      case \"main\":\n        displayPage = <Main\n                        key=\"main\"\n                        cityname={this.state.cityname}\n                        result={this.state.main.result}\n                        timezone_offset={this.state.main.result.timezone_offset}\n                        displayPage={this.displayPage}\n                        collectData={this.collectData}\n                      />\n        break;\n      default:\n        displayPage = <Home\n                        key=\"home\"\n                        searchMethod={this.searchMethod}\n                        getCity={this.getCity}\n                        setCity={this.setCity}\n                        collectData={this.collectData}\n                        result={this.state.result}\n                        geodata={this.state.geodata}\n                      />\n        break;\n    };\n    this.setState({\n      displayPage: displayPage,\n    });\n  };\n\n  // Function to conduct search as per instructed by the user\n  searchMethod = (method) => {\n    if (method === \"currentLocation\") {\n      navigator.geolocation.getCurrentPosition(this.getGeoDataSuccess, this.getGeoDataError);\n    } else {\n    }\n    this.setState({\n      geodata: {\n        isLoading: true,\n      }\n    });\n  };  \n\n  // Function to return value if successfully obtain geodata\n  getGeoDataSuccess = (pos) => {\n    this.setState({\n      geodata: {\n        latitude: pos.coords.latitude,\n        longitude: pos.coords.longitude,\n        isLoading: false,\n      }\n    });\n    // this.collectData(pos.coords.latitude, pos.coords.longitude)\n  };\n\n  // Function to print an error message if unsuccessfull\n  getGeoDataError = (err) => {\n    console.log(`Error: ${err}`);\n  }\n\n  // Function to get geodata by city\n  getCity = (cityname) => {\n    const csrftoken = this.getCookie('csrftoken');\n    fetch(`https://gut2weather.herokuapp.com/api/get_cityname_get/${cityname}`)\n    .then(response => response.json())\n    .then(result => {\n      this.setState({\n        result: result,\n      });\n    })\n    .catch(error => {\n      console.log(error)\n    })\n    .then(console.log(this.state))\n  };\n\n  // Set City\n  setCity = (cityname) => {\n    console.log(`setCity: ${cityname}`);\n    this.setState({\n      cityname: cityname\n    });\n  };\n\n  // Function to collect weather data by latitude and longitude\n  collectData = (lat, lon, cityname) => {    \n    const API_KEY = \"81292baa61f67339affb10a09e0661d9\";\n    const part = '';\n    \n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=${part}&appid=${API_KEY}`)\n    .then(response => response.json())\n    .then(result => {\n      this.setState({\n        isLoading: false,\n        cityname: cityname,\n        main: {\n          cityname: cityname,\n          results: result,\n          result: result,\n        }\n      })\n      this.displayPage(\"main\");\n    });\n  }\n\n  render() {\n    return(\n      <div id=\"App\" className=\"App\">\n        {this.state.displayPage}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}